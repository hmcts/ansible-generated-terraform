# The existing server modules were 90% the same and repeated so didn't want to use them
# this should fit all use cases and only one place to change code

data "template_file" "server_name" {
  template = "$${prefix}"
  count = 1

  vars {
    prefix = "${var.vm_name}"
  }
}

# Create Networking
resource "azurerm_network_interface" "reform-nonprod" {
  count               = 1
  name                = "${var.vm_name}-NIC"
  location            = "${var.location}"
  resource_group_name = "${var.resource_group}"

  ip_configuration {
    name                          = "${var.vm_name}-NIC"
    subnet_id                     = "${var.subnet_id}"
    private_ip_address_allocation = "dynamic"
  }
}

resource "azurerm_virtual_machine" "reform-nonprod" {
  count                 = 1
  name                  = "${var.vm_name}"
  location              = "${var.location}"
  resource_group_name   = "${var.resource_group}"
  network_interface_ids = ["${element(azurerm_network_interface.reform-nonprod.*.id, count.index)}"]
  vm_size               = "${var.vm_size}"
  availability_set_id   = "${var.avset_id}"
  delete_data_disks_on_termination = true
  delete_os_disk_on_termination = true

  storage_image_reference {
    publisher = "MicrosoftWindowsServer"
    offer     = "WindowsServer"
    sku       = "2016-Datacenter"
    version   = "latest"
  }

  storage_os_disk {
    name          = "${var.vm_name}"
    vhd_uri       = "https://${var.storage_account}.blob.core.windows.net/vhds/${var.vm_name}.vhd"
    caching       = "ReadWrite"
    create_option = "FromImage"
  }

  os_profile {
    computer_name  = "${var.vm_name}"
    admin_username = "<lookedupfromvault>"
    admin_password = "<lookedupfromvault>"
  }

  os_profile_windows_config {
    enable_automatic_upgrades = false
  }

  boot_diagnostics {
    enabled     = true
    storage_uri = "https://${var.diagnostics_storage_account}.blob.core.windows.net/"
  }

  tags {
    type      = "vm"
    product   = "${var.product}"
    env       = "${var.env}"
    tier      = "${var.tier}"
    ansible   = "${var.ansible}"
    terraform = "true"
    role      = "${var.role}"
  }
}
